{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"树","date":"2022-05-05T12:54:38.145Z","updated":"2022-05-05T16:28:46.720Z","comments":true,"path":"api/articles/树.json","keywords":null,"cover":null,"text":"树形结构##前缀树（Trie） 前缀树的应用很多，例如搜索算法里的关键词推荐、拼写检查、IP路由匹配、打字检测等。 前缀树实际就是N叉树的一种特殊形式，通常我们用前缀树来存储字符串，因为所有结点的后代都与该节点相对应的字符串有着共同前缀，因此很容易搜索以特定前缀开头的任何单词。针...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"进程间的通信和调度","date":"2022-04-17T12:26:03.898Z","updated":"2022-04-17T14:08:06.511Z","comments":true,"path":"api/articles/进程间的通信和调度.json","keywords":null,"cover":null,"text":"#进程间的通信和调度 进程间通信进程其实就是计算机对于正在运行程序的一个抽象。对于进程而言，不同的进程之间需要进行信息传递，也就是我们说的通信。可是该怎么通信呢？一个进程如何把信息传递给另一个？如何确保两个及以上的进程在关键活动中不会出现交叉？或者进程之间有顺序，我们该如何保证这...","link":"","photos":[],"count_time":{"symbolsCount":573,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"KMP","date":"2022-04-15T16:37:36.087Z","updated":"2022-04-16T08:00:49.472Z","comments":true,"path":"api/articles/KMP.json","keywords":null,"cover":null,"text":"KMP算法详解如果要两个字符串相互匹配，以判断其中一个是否是另一个的子串，并且返回匹配下标，怎么办？ 那么第一时间想出来的办法肯定是遍历字符串。我们称需要匹配的为s1，被匹配的是s2（也就是说判断s1是否是s2的子串）。然后找到匹配的第一个下标，再从这个下标出开始继续匹配，成功则...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"deque","date":"2022-04-15T03:57:07.603Z","updated":"2022-04-15T04:50:13.024Z","comments":true,"path":"api/articles/deque.json","keywords":null,"cover":null,"text":"C++ deque解析双端队列deque(double-ended queue)，容量可动态变化，两段可插入删除，是顺序容器。deque实际分配内存比当前容纳元素内存要多，空闲空间在增加元素时使用。 与vector不同，deque的底层存储空间并不是连续的。离散的存储空间给数据操...","link":"","photos":[],"count_time":{"symbolsCount":621,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"auto","date":"2022-04-15T03:45:27.743Z","updated":"2022-05-05T13:02:51.515Z","comments":true,"path":"api/articles/auto.json","keywords":null,"cover":null,"text":"auto怎样实现类型推断auto并不能代表一个实际的类型声明，只是一个类型声明的“占位符”。使用auto声明的变量必须马上初始化，以让编译器推断出它的类型，并且在编译时将auto占位符替换为真正的类型。 auto的推导规则：（1）当不声明为指针或是引用时，auto的推导结果和初始...","link":"","photos":[],"count_time":{"symbolsCount":669,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":0,"tags":0,"word_count":"5k","post_count":5}